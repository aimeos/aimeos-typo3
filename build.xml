<?xml version="1.0" encoding="UTF-8"?>

<project name="Aimeos TYPO3 extension" default="update">
	<property file="build.properties"/>

	<target name="update" description="Updates the Aimeos core">
		<exec command="git pull https://github.com/aimeos/aimeos-typo3.git" checkreturn="true" logoutput="true"/>
		<exec command="tx pull -a -f --minimum-perc=1" checkreturn="true" logoutput="true"/>
		<exec command="composer update --working-dir ${project.basedir}" checkreturn="true" logoutput="true"/>
	</target>

	<target name="deploy" description="Creates new package">
		<fail message="Version or state not set. Please make release first!">
			<condition>
				<not>
					<or>
						<isset property="version"/>
						<isset property="state"/>
					</or>
				</not>
			</condition>
		</fail>
		<exec command="composer install --no-dev --working-dir ${project.basedir}" checkreturn="true" logoutput="true"/>
		<exec command="zip -r ../aimeos_${version}.zip * -x .tx -x \*.git\* -x composer.* -x .travis.yml -x .deploy.*"
			checkreturn="true" logoutput="true"/>
		<filehash file="../aimeos_${version}.zip" hashtype="1"/>
		<echo msg="SHA1 hash value: ${filehashvalue}"/>
	</target>

	<target name="release" description="Creates new release">
		<input propertyName="version" defaultValue="${version}" message="Release version" promptChar=":"/>
		<input propertyName="state" defaultValue="${state}" message="Stablility state " promptChar=":" validargs="alpha,beta,stable,experimental,test,obsolete,excludeFromUpdates"/>
		<echoproperties destfile="build.properties"/>
		<reflexive>
			<fileset dir="." includes="ext_emconf.php"/>
			<filterchain>
				<replaceregexp>
					<regexp pattern="'version' => '[^']*'" replace="'version' => '${version}'"/>
					<regexp pattern="'state' => '[^']*'" replace="'state' => '${state}'"/>
				</replaceregexp>
			</filterchain>
		</reflexive>
		<exec command="git branch ${version}" checkreturn="true" logoutput="true"/>
		<exec command="git commit -m 'Updated version and state' ext_emconf.php" checkreturn="true" logoutput="true"/>
		<exec command="git tag -a ${version} -m 'Release ${version}'" checkreturn="true" logoutput="true"/>
		<exec command="git push origin ${version}" checkreturn="true" logoutput="true"/>
		<exec command="git push --tags" checkreturn="true" logoutput="true"/>
	</target>

</project>
